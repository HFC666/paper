install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
devtools::install_github('IRkernel/IRkernel')
install.packages('IRkernel')
IRkernel::installspec(user = FALSE)
install.packages("jupyter-client")
IRkernel::installspec()
IRkernel::installspec()
IRkernel::installspec(user = FALSE)
library(rjags)
source("D:/joplin/joplin/贝叶斯/code/JAGS.R", encoding = 'UTF-8')
library(rjags)
library(rjags)
library(rjags)
library(rjags)
# 1. Specify the model
mod_string <- "model {
for (i in 1:n) {
y[i] ~ dnorm(mu, 1.0/sig2)
}
mu ~ dt(0.0, 1.0/1.0, 1)
sig2 = 1.0
}"
# 2. Set up the model
set.seed(50)
y <- c(1.2, 1.4, -0.5, 0.3, 0.9, 2.3, 1.0, 0.1, 1.3, 1.9)
n <- length(y)
data_jags <- list(y=y, n=n)
params <- c("mu")
inits = function() {
inits <- list("mu"=0.0)
}
mod <- jags.model(textConnection(mod_string), data = data_jags, inits = inits)
# 3. Run the MCMC sampler
update(mod, 500) # 先迭代500次，达到平稳分布
mod_sim <- coda.samples(model = mod, variable.names = params, n.iter = 1000)
# 4. Post processing
library(coda)
plot(mod_sim)
prod(1 + runif(12, 0, 0.1))
library(rethinking)
growth <- replicate(10000, prod(1+runif(12,0,0.1)))
dens(growth, norm.comp=TRUE)
big <- replicate( 10000 , prod( 1 + runif(12,0,0.5) ) )
small <- replicate( 10000 , prod( 1 + runif(12,0,0.01) ) )
dens(big, norm.comp=TRUE)
big <- replicate( 10000 , prod( 1 + runif(12,0,2) ) )
dens(big, norm.comp=TRUE)
log.big <- replicate(10000, log(prod(1+runif(12, 0, 0.5))))
dens(log.big, norm.comp=TRUE)
data("Howell1")
d <- data
d2 <- d[d$age >= 18,]
d
d <- Howell1
d2 <- d[d$age >= 18,]
mu.list <- seq(from=140, to=160, length.out=200)
sigma.list <- seq(from=4, to=9, length.out=200)
post <- expand.grid(mu=mu.list, sigma=sigma.list)
post
post$LL <- sapply(1:nrow(post), function(i) sum(
dnorm(d2$height, mean = post$mu[i], sd=post$sigma[i], log=TRUE)
))
post$prod <- post$LL + dnorm(post$mu, 178, 20, TRUE) + dunif(post$sigma, 0, 50, TRUE)
post$prob <- exp(post$prod - max(post$prod))
contour_xyz(post$mu, post$sigma, post$prob)
sample.row <- sample(1:nrow(post), size = 1e4, replace = TRUE, prob = post$prob)
sample.mu <- post$mu[sample.rows]
sample.rows <- sample(1:nrow(post), size = 1e4, replace = TRUE, prob = post$prob)
sample.mu <- post$mu[sample.rows]
sample.sigma <- post$sigma[sample.rows]
plot(sample.mu, sample.sigma, cex=0.5, pch=16, col=col.alpha(rangi2,0.1))
flist <- alist(
height ~ dnorm(mu, sigma),
mu ~ dnorm(178, 20),
sigma ~ dunif(0, 50)
)
m4.1 <- map(flist, data = d2)
precis(m4.1)
vcov(m4.1)
m4.1_logsigma <- map(
alist(
height ~ dnorm(mu, exp(log_sigma))
mu ~ dnorm(178, 20)
log_sigma ~ dnorm(2, 10)
), data =d2)
m4.1_logsigma <- map(
alist(
height ~ dnorm(mu, exp(log_sigma)),
mu ~ dnorm(178, 20),
log_sigma ~ dnorm(2, 10)
), data =d2)
post <- extract.samples(m4.1_logsigma)
sigma <- exp(post$log_sigma)
m4.3 <- map(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*weight,
a ~ dnorm(156, 100),
b ~ dnorm(0, 10),
sigma ~ dunif(0,50)
),
data=d2
)
library(rethinking)
data(WaffleDivorce)
d <- WaffleDivorce
d$MedianAgeMarriage.s <- (d$MedianAgeMarriage-mean(d$MedianAgeMarriage))/
sd(d$MedianAgeMarriage)
m5.1 <- map(
alist(
Divorce ~ dnorm( mu , sigma ) ,
mu <- a + bA * MedianAgeMarriage.s ,
a ~ dnorm ( 10 , 10 ) ,
bA ~ dnorm ( 0 , 1 ) ,
sigma ~ dunif( 0 , 10 )
) , data = d )
MAM.seq <- seq( from=-3 , to=3.5 , length.out=30 )
mu <- link( m5.1 , data=data.frame(MedianAgeMarriage.s=MAM.seq) )
mu.PI <- apply( mu , 2 , PI )
plot( Divorce ~ MedianAgeMarriage.s , data=d , col=rangi2 )
abline( m5.1 )
shade(mu.PI , MAM.seq)
# 归一化数据
d$MedianAgeMarriage.s <- (d$MedianAgeMarriage-mean(d$MedianAgeMarriage))/
sd(d$MedianAgeMarriage)
d$Marriage.s <- (d$Marriage - mean(d$Marriage))/sd(d$Marriage)
m5.3 <- map(
alist(
Divorce ~ dnorm(mu, sigma),
mu <- a + bR*Marriage.s + bA*MedianAgeMarriage.s,
a ~ dnorm(10, 10),
bR ~ dnorm(0, 1),
bA ~ dnorm(0, 1),
sigma ~ dunif(0, 10)
),
data = d
)
precis(m5.3)
m5.4 <- map(
alist(
Marriage.s ~ dnorm(mu, sigma),
mu <- a + b*MedianAgeMarriage.s,
a ~ dnorm(0, 10),
b ~ dnorm(0, 1),
sigma ~ dunif(0, 10)
),
data = d
)
mu <- coef(m5.4)['a'] + coef(m5.4)['b']*d$MedianAgeMarriage.s
m.resid <- d$Marriage.s - mu
A.avg <- mean(d$MedianAgeMarriage.s)
R.seq <- seq(from=-3, to=3, length.out=30)
pred.data <- data.frame(
Marriage.s = R.seq,
MedianAgeMarriage.s=A.avg
)
mu <- link(m5.3, data = pred.data)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI)
R.sim <- sim(m5.3, data = pred.data, n=1e4)
R.PI <- apply(R.sim, 2, PI)
plot(Divorce ~ Marriage.s, data=d, type="n")
mtext("MedianAgeMarriage.s=0")
lines(R.seq, mu.mean)
shade(mu.PI, R.seq)
shade(R.PI, R.seq)
setwd("D:\\joplin\\2022\\2022\\paper\\Bayesian\\code")
